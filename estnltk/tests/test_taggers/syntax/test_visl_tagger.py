from estnltk import Text
from estnltk.converters import layer_to_dict
from estnltk.taggers import VislTagger

visl_dict = {'_base': 'words',
 'ambiguous': True,
 'attributes': ('lemma', 'ending', 'partofspeech', 'feats', 'deprel', 'head'),
 'enveloping': None,
 'name': 'visl',
 'parent': 'words',
 'spans': [[{'_index_': 0,
             'deprel': ['@ADVL'],
             'end': 4,
             'ending': '0',
             'feats': 'cap',
             'head': '#1->3',
             'lemma': 'juba',
             'partofspeech': 'D',
             'start': 0}],
           [{'_index_': 1,
             'deprel': ['@FMV'],
             'end': 10,
             'ending': 'b',
             'feats': 'main indic pres ps3 sg ps af',
             'head': '#2->0',
             'lemma': 'taht',
             'partofspeech': 'V',
             'start': 5}],
           [{'_index_': 2,
             'deprel': ['@OBJ'],
             'end': 16,
             'ending': 'da',
             'feats': 'main inf',
             'head': '#3->2',
             'lemma': 'saa',
             'partofspeech': 'V',
             'start': 11}],
           [{'_index_': 3,
             'deprel': ['@ADVL'],
             'end': 25,
             'ending': 'ks',
             'feats': 'com sg tr',
             'head': '#4->3',
             'lemma': 'pagar',
             'partofspeech': 'S',
             'start': 17}],
           [{'_index_': 4,
             'deprel': [],
             'end': 26,
             'ending': '_',
             'feats': 'Exc CLB',
             'head': '#5->5',
             'lemma': '!',
             'partofspeech': 'Z',
             'start': 25}],
           [{'_index_': 5,
             'deprel': ['@ADVL'],
             'end': 30,
             'ending': '0',
             'feats': 'pos det refl pl nom cap',
             'head': '#1->3',
             'lemma': 'ise',
             'partofspeech': 'P',
             'start': 27},
            {'_index_': 5,
             'deprel': ['@ADVL'],
             'end': 30,
             'ending': '0',
             'feats': 'pos det refl sg nom cap',
             'head': '#1->3',
             'lemma': 'ise',
             'partofspeech': 'P',
             'start': 27}],
           [{'_index_': 6,
             'deprel': ['@ADVL'],
             'end': 36,
             'ending': '0',
             'feats': '_',
             'head': '#2->3',
             'lemma': 'alles',
             'partofspeech': 'D',
             'start': 31}],
           [{'_index_': 7,
             'deprel': ['@NN>'],
             'end': 40,
             'ending': '0',
             'feats': 'com sg gen',
             'head': '#3->0',
             'lemma': 'tee',
             'partofspeech': 'S',
             'start': 37},
            {'_index_': 7,
             'deprel': ['@OBJ'],
             'end': 40,
             'ending': '0',
             'feats': 'com sg gen',
             'head': '#3->0',
             'lemma': 'tee',
             'partofspeech': 'S',
             'start': 37}],
           [{'_index_': 8,
             'deprel': ['@AN>'],
             'end': 49,
             'ending': 'l',
             'feats': 'ord sg ad l',
             'head': '#4->5',
             'lemma': 'esimene',
             'partofspeech': 'N',
             'start': 41}],
           [{'_index_': 9,
             'deprel': ['@<NN', '@ADVL'],
             'end': 56,
             'ending': 'l',
             'feats': 'com sg ad',
             'head': '#5->3',
             'lemma': 'pool',
             'partofspeech': 'S',
             'start': 50}],
           [{'_index_': 10,
             'deprel': [],
             'end': 58,
             'ending': '_',
             'feats': 'Com',
             'head': '#6->6',
             'lemma': ',',
             'partofspeech': 'Z',
             'start': 57}],
           [{'_index_': 11,
             'deprel': ['@ADVL'],
             'end': 64,
             'ending': '0',
             'feats': '_',
             'head': '#7->3',
             'lemma': 'vaevu',
             'partofspeech': 'D',
             'start': 59}],
           [{'_index_': 12,
             'deprel': ['@ADVL'],
             'end': 82,
             'ending': '0',
             'feats': 'pos sg nom',
             'head': '#8->5',
             'lemma': 'kolme_kümne_kolmene',
             'partofspeech': 'A',
             'start': 65}],
           [{'_index_': 13,
             'deprel': [],
             'end': 84,
             'ending': '_',
             'feats': 'Fst CLB',
             'head': '#9->9',
             'lemma': '.',
             'partofspeech': 'Z',
             'start': 83}]]}

def test_visl_tagger():
    text = Text('Juba tahab saada pagariks! Ise alles tee esimesel poolel , vaevu kolmekümnekolmene .').tag_layer(['morph_extended'])

    tagger = VislTagger()
    tagger.tag(text)
    result = layer_to_dict(layer=text.visl, text=text)
    assert visl_dict == result
